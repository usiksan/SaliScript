/*
  Проект "SaliScript"

  Автор
    Сибилев А.С.
  Описание
    Поток ввода: преобразование текстовой строки в бинарные данные
*/
#ifndef SVTEXTSTREAMIN_H
#define SVTEXTSTREAMIN_H

//!
//! \brief The SvTextStreamIn class служит для преобразования текстовой строки в бинарные данные.
//! Текстовая строка удобна для передачи по каналам связи, например по Ethernet или USB или UART.
//! Бинарные данные кодируются в семь младших битов каждого байта. Старший бит устанавливается в 1.
//! Это обеспечивает неперекрывание с набором латинского алфавита и специальным знаком \n
//! Для кодирования служит класс SvTextStreamOut. Кодирование и декодирование полностью согласованы,
//! поэтому нечувствительны к различиям используемых платформ.
//!
class SvTextStreamIn
  {
    const char *mBuffer;   //! Указатель на буфер с текстовой строкой
    short       mPtr;      //! Номер текущего байта
    short       mUsedBits; //! Количество использованных битов в текущем байте
  public:
    //!
    //! \brief SvTextStreamIn Конструктор декодера
    //! \param buf Буфер, содержащий исходную строку
    //!
    SvTextStreamIn( const char *buf );

    //!
    //! \brief getCmd возвращает самый первый символ строки, который представляет собой команду
    //! \return команда
    //!
    char  getCmd() { return mBuffer[0]; }

    //!
    //! \brief getInt8 Извлекает 8-битное число
    //! \return 8-битное число
    //!
    int   getInt8();

    //!
    //! \brief getInt16 Извлекает 16-битное число
    //! \return 16-битное число
    //!
    int   getInt16();

    //!
    //! \brief getInt32 Извлекает 32-битное число
    //! \return 32-битное число
    //!
    int   getInt32();

    //!
    //! \brief getBlock Извлекает набор байтов
    //! \param dest Буфер-приемник байтов
    //! \param size Количество извлекаемых байтов
    //!
    void  getBlock( char *dest, int size );
  };

#endif // SVTEXTSTREAMIN_H
